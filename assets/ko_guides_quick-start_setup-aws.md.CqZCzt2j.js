import{_ as i,c as a,o as t,ag as n}from"./chunks/framework.BDwTZuFy.js";const c=JSON.parse('{"title":"AWS에 인프라 배포하기","description":"","frontmatter":{},"headers":[],"relativePath":"ko/guides/quick-start/setup-aws.md","filePath":"ko/guides/quick-start/setup-aws.md","lastUpdated":1748425526000}'),e={name:"ko/guides/quick-start/setup-aws.md"};function l(h,s,p,k,d,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="aws에-인프라-배포하기" tabindex="-1">AWS에 인프라 배포하기 <a class="header-anchor" href="#aws에-인프라-배포하기" aria-label="Permalink to &quot;AWS에 인프라 배포하기&quot;">​</a></h1><p>이 문서는 <strong>Pulumi</strong>를 사용해서 <strong>React Native CDN(Content Delivery Network)</strong> 인프라를 AWS에 설정하는 방법을 안내해요. 이 작업은 <code>@granite-js/pulumi-aws</code> 패키지를 사용해서 진행해요.</p><h2 id="설치하기" tabindex="-1">설치하기 <a class="header-anchor" href="#설치하기" aria-label="Permalink to &quot;설치하기&quot;">​</a></h2><p>Pulumi를 처음 사용한다면 먼저 Pulumi CLI를 설치해야 해요. 아래 공식 가이드를 참고해서 운영 체제에 맞게 설치해 주세요.</p><ul><li><a href="https://www.pulumi.com/docs/iac/download-install/" target="_blank" rel="noreferrer">Pulumi 설치 가이드</a></li></ul><h2 id="pulumi-프로젝트-생성하기" tabindex="-1">Pulumi 프로젝트 생성하기 <a class="header-anchor" href="#pulumi-프로젝트-생성하기" aria-label="Permalink to &quot;Pulumi 프로젝트 생성하기&quot;">​</a></h2><p>Pulumi 프로젝트를 생성하려면 아래 명령어를 실행해요.</p><p>명령어를 실행하면 기본 템플릿이 생성되고, 몇 가지 설정을 물어봐요. 프로젝트 이름, 설명, AWS 리전 등을 입력한 뒤 마무리하면 프로젝트가 준비돼요.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native-cdn</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> react-native-cdn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aws-typescript</span></span></code></pre></div><h2 id="패키지-설치하기" tabindex="-1">패키지 설치하기 <a class="header-anchor" href="#패키지-설치하기" aria-label="Permalink to &quot;패키지 설치하기&quot;">​</a></h2><p>Pulumi에서 React Native CDN 컴포넌트를 사용하려면 <code>@granite-js/pulumi-aws</code> 패키지를 설치해야 해요. 사용하는 패키지 매니저에 따라 다음 명령어 중 하나를 실행해요.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-bzWM2" id="tab-aO1MuQh" checked><label data-title="npm" for="tab-aO1MuQh">npm</label><input type="radio" name="group-bzWM2" id="tab-YOQkOJn"><label data-title="pnpm" for="tab-YOQkOJn">pnpm</label><input type="radio" name="group-bzWM2" id="tab-AXbqtfx"><label data-title="yarn" for="tab-AXbqtfx">yarn</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @granite-js/pulumi-aws</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @granite-js/pulumi-aws</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @yarnpkg/pnpify</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @granite-js/pulumi-aws</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --save-dev</span></span></code></pre></div></div></div><h2 id="aws-자격-증명-aws-credentials-구성하기" tabindex="-1">AWS 자격 증명(AWS Credentials) 구성하기 <a class="header-anchor" href="#aws-자격-증명-aws-credentials-구성하기" aria-label="Permalink to &quot;AWS 자격 증명(AWS Credentials) 구성하기&quot;">​</a></h2><p>Pulumi가 AWS 리소스를 생성할 수 있도록 자격 증명을 설정해야 해요. 환경 변수로 설정하거나, AWS CLI로 구성할 수 있어요.</p><h3 id="방법1-환경-변수로-설정하기" tabindex="-1">방법1: 환경 변수로 설정하기 <a class="header-anchor" href="#방법1-환경-변수로-설정하기" aria-label="Permalink to &quot;방법1: 환경 변수로 설정하기&quot;">​</a></h3><p>Pulumi는 실행되는 환경에서 AWS 자격 증명을 읽어서 리소스를 생성해요. 자격 증명을 환경 변수로 설정하면 별도 설정 파일 없이도 Pulumi가 자동으로 값을 읽을 수 있어요.</p><p>다음과 같이 터미널에서 자격 증명을 설정해요. 이 방법은 일시적으로만 적용되며, 터미널을 종료하면 사라져요.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AWS_ACCESS_KEY_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-access-key-id&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AWS_SECRET_ACCESS_KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-secret-access-key&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AWS_REGION</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-region&quot;</span></span></code></pre></div><h3 id="방법2-aws-cli로-설정하기" tabindex="-1">방법2: AWS CLI로 설정하기 <a class="header-anchor" href="#방법2-aws-cli로-설정하기" aria-label="Permalink to &quot;방법2: AWS CLI로 설정하기&quot;">​</a></h3><p>이 명령어를 실행하면 자격 증명과 기본 리전을 입력할 수 있어요. 자격 증명을 AWS CLI로 설정하면 터미널을 종료해도 자격 증명이 유지돼요.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">aws</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configure</span></span></code></pre></div><h2 id="사용-방법" tabindex="-1">사용 방법 <a class="header-anchor" href="#사용-방법" aria-label="Permalink to &quot;사용 방법&quot;">​</a></h2><p><code>ReactNativeBundleCDN</code> 컴포넌트를 사용하려면 Pulumi 프로그램에서 가져와 인스턴스를 만들면 돼요.</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { ReactNativeBundleCDN } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@granite-js/pulumi-aws&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pulumi </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@pulumi/pulumi&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pulumi.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> cdn</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ReactNativeBundleCDN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myReactNativeBundleCDN&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  bucketName: config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bucketName&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  region: config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;region&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> iosSharedUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pulumi.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">interpolate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`https://\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cdn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cloudfrontDomain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/ios/shared/1/bundle\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> androidSharedUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pulumi.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">interpolate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`https://\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cdn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cloudfrontDomain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/android/shared/1/bundle\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="구성-변수-설정하기" tabindex="-1">구성 변수 설정하기 <a class="header-anchor" href="#구성-변수-설정하기" aria-label="Permalink to &quot;구성 변수 설정하기&quot;">​</a></h2><p>위 예제 코드에서 사용하는 구성 변수 <code>bucketName</code>과 <code>region</code>은 Pulumi 설정으로 미리 지정해야 해요.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bucketName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> your-bucket-name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> us-west-2</span></span></code></pre></div><h2 id="인프라-배포하기" tabindex="-1">인프라 배포하기 <a class="header-anchor" href="#인프라-배포하기" aria-label="Permalink to &quot;인프라 배포하기&quot;">​</a></h2><p>설정이 모두 끝났다면 다음 명령어로 인프라를 배포해요.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Yarn Plug’n’Play(PnP)를 사용하는 경우</p><p>다음 명령어로 pnpify를 설치하고 pulumi 명령어를 실행해야 해요.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @yarnpkg/pnpify</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pnpify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span></span></code></pre></div></div><p>명령어를 실행하면 Pulumi가 어떤 리소스를 만들지 보여줘요. 내용을 검토한 뒤, <code>yes</code>를 입력하면 배포가 시작돼요. 이 과정에서 AWS에 React Native CDN 인프라가 생성돼요.</p><h2 id="리소스-정리하기" tabindex="-1">리소스 정리하기 <a class="header-anchor" href="#리소스-정리하기" aria-label="Permalink to &quot;리소스 정리하기&quot;">​</a></h2><p>배포한 리소스를 더 이상 사용하지 않아 삭제하려면 다음 명령어를 실행하면 돼요.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pulumi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> destroy</span></span></code></pre></div><p>Pulumi가 어떤 리소스를 삭제할지 보여주고, 확인을 요청해요. <code>yes</code>를 입력하면 모든 리소스가 삭제돼요.</p>`,36)]))}const g=i(e,[["render",l]]);export{c as __pageData,g as default};
