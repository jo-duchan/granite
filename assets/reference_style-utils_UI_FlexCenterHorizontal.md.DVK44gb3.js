import{_ as e,c as a,o as t,ag as i}from"./chunks/framework.BDwTZuFy.js";const k=JSON.parse('{"title":"FlexCenterHorizontal","description":"","frontmatter":{"sourcePath":"packages/style-utils/src/flex.tsx"},"headers":[],"relativePath":"reference/style-utils/UI/FlexCenterHorizontal.md","filePath":"reference/style-utils/UI/FlexCenterHorizontal.md","lastUpdated":1748425526000}'),n={name:"reference/style-utils/UI/FlexCenterHorizontal.md"};function l(r,s,p,o,h,c){return t(),a("div",null,s[0]||(s[0]=[i(`<h1 id="flexcenterhorizontal" tabindex="-1">FlexCenterHorizontal <a class="header-anchor" href="#flexcenterhorizontal" aria-label="Permalink to &quot;FlexCenterHorizontal&quot;">​</a></h1><p><code>Flex.CenterHorizontal</code> is a component for <strong>horizontally centering</strong> child elements based on <a href="https://reactnative.dev/docs/0.72/flexbox" target="_blank" rel="noreferrer"><strong>Flexbox Layout</strong></a>. The <code>alignItems</code> property is set to <code>&#39;center&#39;</code>, placing child elements at the horizontal center of the parent component.</p><h2 id="signature" tabindex="-1">Signature <a class="header-anchor" href="#signature" aria-label="Permalink to &quot;Signature&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FlexCenterHorizontal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;react&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).ForwardRefExoticComponent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Props </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;react&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).RefAttributes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">View</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="parameter" tabindex="-1">Parameter <a class="header-anchor" href="#parameter" aria-label="Permalink to &quot;Parameter&quot;">​</a></h3><ul class="post-parameters-ul"><li class="post-parameters-li post-parameters-li-root"><span class="post-parameters--name">props</span><span class="post-parameters--type">object</span><br><p class="post-parameters--description">The props object passed to the component.</p><ul class="post-parameters-ul"><li class="post-parameters-li"><span class="post-parameters--name">props.align</span><span class="post-parameters--type">&#39;flex-start&#39; | &#39;flex-end&#39; | &#39;center&#39; | &#39;stretch&#39; | &#39;baseline&#39;</span> · <span class="post-parameters--default">&#39;center&#39;</span><br><p class="post-parameters--description">The alignment value for child elements along the main axis (Flex direction). For example, in <code>&#39;column&#39;</code> direction, <code>&#39;center&#39;</code> places elements at the horizontal center, and <code>&#39;stretch&#39;</code> expands elements to match the parent&#39;s width when their width is <code>&#39;auto&#39;</code>. This value is applied to <a href="https://reactnative.dev/docs/0.72/layout-props#alignitems" target="_blank" rel="noreferrer">\`alignItems\`</a>, with a default value of <code>&#39;center&#39;</code>.</p></li><li class="post-parameters-li"><span class="post-parameters--name">props.justify</span><span class="post-parameters--type">&#39;flex-start&#39; | &#39;flex-end&#39; | &#39;center&#39; | &#39;space-between&#39; | &#39;space-around&#39; | &#39;space-evenly&#39;</span> · <span class="post-parameters--default">&#39;flex-start&#39;</span><br><p class="post-parameters--description">The alignment value for child elements along the cross axis (perpendicular to Flex direction). For example, in <code>&#39;column&#39;</code> direction, <code>flex-start</code> places elements at the top of the parent, and <code>&#39;center&#39;</code> places them at the vertical center. This value is applied to <a href="https://reactnative.dev/docs/0.72/layout-props#justifycontent" target="_blank" rel="noreferrer">\`justifyContent\`</a>, with a default value of <code>&#39;flex-start&#39;</code>.</p></li><li class="post-parameters-li"><span class="post-parameters--name">props.direction</span><span class="post-parameters--type">&#39;column&#39; | &#39;row&#39;</span> · <span class="post-parameters--default">&#39;column&#39;</span><br><p class="post-parameters--description">The value that sets the direction in which child elements are arranged. Default value is <code>&#39;column&#39;</code>, arranging elements vertically.</p></li><li class="post-parameters-li"><span class="post-parameters--name">props.style</span><span class="post-parameters--type">ViewProps[&#39;style&#39;]</span><br><p class="post-parameters--description">The <code>style</code> object to be applied to the <code>Flex.CenterHorizontal</code> component. Used to specify styles other than Flexbox layout, such as background color, border, and margin. Default value is <code>undefined</code>.</p></li></ul></li></ul><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><h3 id="example-of-horizontally-centering-elements" tabindex="-1">Example of horizontally centering elements <a class="header-anchor" href="#example-of-horizontally-centering-elements" aria-label="Permalink to &quot;Example of horizontally centering elements&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Flex } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@granite-js/react-native&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Text } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react-native&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlexCenterHorizontalExample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Flex.CenterHorizontal</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> style</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{{ width: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;100%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, borderWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Place at the horizontal center&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Flex.CenterHorizontal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,9)]))}const E=e(n,[["render",l]]);export{k as __pageData,E as default};
