import{_ as a,c as i,o as e,ag as t}from"./chunks/framework.BDwTZuFy.js";const d=JSON.parse('{"title":"Flex","description":"","frontmatter":{"sourcePath":"packages/style-utils/src/flex.tsx"},"headers":[],"relativePath":"ko/reference/style-utils/UI/Flex.md","filePath":"ko/reference/style-utils/UI/Flex.md","lastUpdated":1748425526000}'),l={name:"ko/reference/style-utils/UI/Flex.md"};function p(n,s,r,h,k,o){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="flex" tabindex="-1">Flex <a class="header-anchor" href="#flex" aria-label="Permalink to &quot;Flex&quot;">​</a></h1><p><code>Flex</code>는 자식 요소들을 <a href="https://reactnative.dev/docs/0.72/flexbox" target="_blank" rel="noreferrer"><strong>Flexbox 레이아웃</strong></a>을 기준으로 배치하는 컴포넌트예요. Flexbox를 사용하면, 가로 및 세로 방향으로 요소들을 쉽게 정렬하고, 중앙 정렬을 간편하게 설정할 수 있어요. 자식 요소를 정 중앙에 배치할 때에는 <code>Flex.Center</code>, 세로 중앙에 배치할 때에는 <code>Flex.CenterVertical</code>, 가로 중앙에 배치할 때에는 <code>Flex.CenterHorizontal</code>을 사용해요.</p><h2 id="시그니처" tabindex="-1">시그니처 <a class="header-anchor" href="#시그니처" aria-label="Permalink to &quot;시그니처&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: FlexType</span></span></code></pre></div><h3 id="파라미터" tabindex="-1">파라미터 <a class="header-anchor" href="#파라미터" aria-label="Permalink to &quot;파라미터&quot;">​</a></h3><ul class="post-parameters-ul"><li class="post-parameters-li post-parameters-li-root"><span class="post-parameters--name">props</span><span class="post-parameters--type">object</span><br><p class="post-parameters--description">컴포넌트에 전달되는 <code>props</code> 객체예요.</p><ul class="post-parameters-ul"><li class="post-parameters-li"><span class="post-parameters--name">props.align</span><span class="post-parameters--type">&#39;flex-start&#39; | &#39;flex-end&#39; | &#39;center&#39; | &#39;stretch&#39; | &#39;baseline&#39;</span> · <span class="post-parameters--default">&#39;stretch&#39;</span><br><p class="post-parameters--description">중심축 기준(Flex 방향)으로 자식 요소를 정렬하는 설정 값이에요. <code>&#39;column&#39;</code> 방향을 예로 들면 <code>&#39;center&#39;</code>는 수평 중앙에 배치하고, <code>&#39;stretch&#39;</code>는 요소의 폭이 <code>&#39;auto&#39;</code>인 경우 부모의 폭에 맞게 늘려요. 이 값은 <a href="https://reactnative.dev/docs/0.72/layout-props#alignitems" target="_blank" rel="noreferrer">\`alignItems\`</a>에 적용되며, 기본값은 <code>&#39;stretch&#39;</code>예요.</p></li><li class="post-parameters-li"><span class="post-parameters--name">props.justify</span><span class="post-parameters--type">&#39;flex-start&#39; | &#39;flex-end&#39; | &#39;center&#39; | &#39;space-between&#39; | &#39;space-around&#39; | &#39;space-evenly&#39;</span> · <span class="post-parameters--default">&#39;flex-start&#39;</span><br><p class="post-parameters--description">교차축(Flex 방향의 교차 방향) 기준으로 자식 요소를 정렬하는 설정 값이에요. <code>&#39;column&#39;</code> 방향을 예로 들어, <code>flex-start</code>는 요소를 부모의 위쪽에 배치하고, <code>&#39;center&#39;</code>는 부모의 수직 중앙에 배치해요. 이 값은 <a href="https://reactnative.dev/docs/0.72/layout-props#justifycontent" target="_blank" rel="noreferrer">\`justifyContent\`</a>에 적용되며, 기본값은 <code>&#39;flex-start&#39;</code>예요.</p></li><li class="post-parameters-li"><span class="post-parameters--name">props.direction</span><span class="post-parameters--type">&#39;column&#39; | &#39;row&#39;</span> · <span class="post-parameters--default">&#39;column&#39;</span><br><p class="post-parameters--description">자식 요소들이 배치될 방향을 설정하는 값이에요. <a href="https://reactnative.dev/docs/0.72/layout-props#flexdirection" target="_blank" rel="noreferrer">\`flexDirection\`</a>에 적용되며, 기본값은 <code>&#39;column&#39;</code>이에요.</p></li><li class="post-parameters-li"><span class="post-parameters--name">props.style</span><span class="post-parameters--type">ViewProps[&#39;style&#39;]</span><br><p class="post-parameters--description"><code>Flex</code> 컴포넌트에 적용할 <code>style</code> 객체예요. Flexbox 레이아웃 외에 컴포넌트의 배경색, 테두리, 여백 등 다른 스타일을 지정할 때 사용해요. 기본값은 <code>undefined</code>에요.</p></li></ul></li></ul><h3 id="프로퍼티" tabindex="-1">프로퍼티 <a class="header-anchor" href="#프로퍼티" aria-label="Permalink to &quot;프로퍼티&quot;">​</a></h3><ul class="post-parameters-ul"><li class="post-parameters-li post-parameters-li-root"><span class="post-parameters--name">Center</span><span class="post-parameters--type">FlexCenter</span><br><p class="post-parameters--description"><code>Flex.Center</code>는 자식 요소들을 <strong>Flex Layout</strong> 기준으로 가로와 세로 모두 정 중앙에 배치하는 컴포넌트예요.</p></li></ul><ul class="post-parameters-ul"><li class="post-parameters-li post-parameters-li-root"><span class="post-parameters--name">CenterVertical</span><span class="post-parameters--type">FlexCenterVertical</span><br><p class="post-parameters--description"><code>Flex.CenterVertical</code>는 자식 요소들을 Flex Layout 기준으로 <strong>세로 방향으로 중앙에 정렬</strong>하기 위한 컴포넌트예요.</p></li></ul><ul class="post-parameters-ul"><li class="post-parameters-li post-parameters-li-root"><span class="post-parameters--name">CenterHorizontal</span><span class="post-parameters--type">FlexCenterHorizontal</span><br><p class="post-parameters--description"><code>Flex.CenterHorizontal</code>는 자식 요소들을 Flex Layout 기준으로 <strong>가로 방향으로 중앙에 정렬</strong>하기 위한 컴포넌트예요.</p></li></ul><h2 id="예제" tabindex="-1">예제 <a class="header-anchor" href="#예제" aria-label="Permalink to &quot;예제&quot;">​</a></h2><h3 id="가로-세로-방향으로-요소들을-배치하는-예제예요" tabindex="-1">가로, 세로 방향으로 요소들을 배치하는 예제예요. <a class="header-anchor" href="#가로-세로-방향으로-요소들을-배치하는-예제예요" aria-label="Permalink to &quot;가로, 세로 방향으로 요소들을 배치하는 예제예요.&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Flex } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@granite-js/react-native&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Text } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react-native&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FlexExample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Flex</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> direction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;column&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;세로로 배치해요&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;3&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Flex</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> direction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;row&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;가로로 배치해요&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;1&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;2&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;3&lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,13)]))}const E=a(l,[["render",p]]);export{d as __pageData,E as default};
