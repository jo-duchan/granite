import{_ as a,c as r,o as i,ag as t}from"./chunks/framework.BDwTZuFy.js";const f=JSON.parse('{"title":"ColorPreference","description":"","frontmatter":{"sourcePath":"packages/react-native/src/initial-props/InitialProps.ts"},"headers":[],"relativePath":"reference/react-native/UI/ColorPreference.md","filePath":"reference/react-native/UI/ColorPreference.md","lastUpdated":1748425526000}'),n={name:"reference/react-native/UI/ColorPreference.md"};function s(o,e,l,c,p,h){return i(),r("div",null,e[0]||(e[0]=[t('<h1 id="colorpreference" tabindex="-1">ColorPreference <a class="header-anchor" href="#colorpreference" aria-label="Permalink to &quot;ColorPreference&quot;">​</a></h1><p>Type representing the color mode of the current device. It is a string representing light mode and dark mode.</p><h2 id="signature" tabindex="-1">Signature <a class="header-anchor" href="#signature" aria-label="Permalink to &quot;Signature&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ColorPreference</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;light&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dark&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="type-definition" tabindex="-1">Type Definition <a class="header-anchor" href="#type-definition" aria-label="Permalink to &quot;Type Definition&quot;">​</a></h3><h4 id="colorpreference-1" tabindex="-1"><code>ColorPreference</code> <a class="header-anchor" href="#colorpreference-1" aria-label="Permalink to &quot;`ColorPreference`&quot;">​</a></h4><p><em><code>&#39;light&#39; | &#39;dark&#39;</code></em></p>',7)]))}const k=a(n,[["render",s]]);export{f as __pageData,k as default};
