import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.BDwTZuFy.js";const o=JSON.parse('{"title":"Granite","description":"","frontmatter":{"sourcePath":"packages/react-native/src/app/Granite.tsx"},"headers":[],"relativePath":"ko/reference/react-native/core/Granite.md","filePath":"ko/reference/react-native/core/Granite.md","lastUpdated":1748425526000}'),n={name:"ko/reference/react-native/core/Granite.md"};function p(l,s,h,r,k,d){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="granite" tabindex="-1">Granite <a class="header-anchor" href="#granite" aria-label="Permalink to &quot;Granite&quot;">​</a></h1><h2 id="시그니처" tabindex="-1">시그니처 <a class="header-anchor" href="#시그니처" aria-label="Permalink to &quot;시그니처&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Granite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {	</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    registerApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AppContainer: ComponentType</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PropsWithChildren</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InitialProps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { appName, context, router }: GraniteProps)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">initialProps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InitialProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JSX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.Element;	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    readonly </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: string;	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="프로퍼티" tabindex="-1">프로퍼티 <a class="header-anchor" href="#프로퍼티" aria-label="Permalink to &quot;프로퍼티&quot;">​</a></h3><ul class="post-parameters-ul"><li class="post-parameters-li post-parameters-li-root"><span class="post-parameters--name">registerApp</span><span class="post-parameters--required">필수</span> · <span class="post-parameters--type">RegisterService</span><br><p class="post-parameters--description">이 함수는 서비스의 기본 환경을 설정해주고, 복잡한 설정을 따로 할 필요 없이 서비스 개발을 빠르게 시작할 수 있게 도와줘요. <code>appName</code>만 전달하면 파일 기반 라우팅, 쿼리 파라미터 처리, 뒤로 가기 제어 등 여러 기능을 바로 사용할 수 있어요.</p></li></ul><p><code>Granite.registerApp</code> 함수가 제공하는 기능은 다음과 같아요.</p><ul><li>라우팅: 파일 경로에 맞게 URL이 자동으로 매핑돼요. Next.js의 파일 기반 라우팅과 비슷한 방식으로 동작해요. 예를 들어 <code>/my-service/pages/index.ts</code> 파일은 <code>scheme://my-service</code> 주소로 접근할 수 있고, <code>/my-service/pages/home.ts 파일은 scheme://my-service/home</code> 주소로 접근할 수 있어요.</li><li>쿼리 파라미터: URL 스킴으로 전달 받은 쿼리 파라미터를 쉽게 사용할 수 있어요. 예를 들어, <code>referrer</code> 파라미터를 받아서 로그를 남길 수 있어요.</li><li>뒤로 가기 제어: 뒤로 가기 이벤트를 제어할 수 있어요. 예를 들어, 사용자가 화면에서 뒤로 가기를 누르면 다이얼로그를 띄우거나 화면을 닫을 수 있어요.</li><li>화면 가시성(Visibility): 화면이 사용자에게 보이는지, 가려져 있는지 알 수 있어요. 예를 들어, 사용자가 홈 화면으로 나갔을 때 이 값을 활용해 특정 동작을 처리할 수 있어요.</li></ul><h2 id="예제" tabindex="-1">예제 <a class="header-anchor" href="#예제" aria-label="Permalink to &quot;예제&quot;">​</a></h2><h3 id="granite-컴포넌트로-만드는-예제" tabindex="-1"><code>Granite</code> 컴포넌트로 만드는 예제 <a class="header-anchor" href="#granite-컴포넌트로-만드는-예제" aria-label="Permalink to &quot;\`Granite\` 컴포넌트로 만드는 예제&quot;">​</a></h3><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { PropsWithChildren } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Granite, InitialProps } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@granite-js/react-native&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { context } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;../require.context&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;	</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AppContainer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">children</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PropsWithChildren</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">InitialProps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;) {	</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;&gt;{children}&lt;/&gt;;	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}	</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Granite.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerApp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AppContainer, {	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> appName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;my-app&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context,	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,10)]))}const c=i(n,[["render",p]]);export{o as __pageData,c as default};
